user nginx;
worker_processes 1;

error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /dev/stdout main;
    sendfile on;
    keepalive_timeout 65;

    # Add Docker DNS resolver with shorter validity and IPv6 disabled
    resolver 127.0.0.11 ipv6=off valid=5s;

    # Redirect from HTTP to HTTPS
    server {
        listen 80;
        server_name api.swecc.org;

        location ^~ /.well-known/ {
            # Allow Let's Encrypt to validate the domain
            root /usr/share/nginx/html;
            allow all;
        }

        location / {
            return 301 https://$host$request_uri;
        }
    }

    # HTTPS Server
    server {
        listen 443 ssl;
        server_name api.swecc.org;

        ssl_certificate /etc/letsencrypt/live/api.swecc.org/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/api.swecc.org/privkey.pem;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers HIGH:!aNULL:!MD5;
        ssl_prefer_server_ciphers on;

        # Health check endpoint
        location /health/ {
            set $upstream_server server;
            proxy_pass http://$upstream_server:8000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_connect_timeout 10;
            proxy_read_timeout 10;

            # Error handling for health checks
            proxy_intercept_errors on;
            error_page 502 503 504 = @health_unavailable;
        }

        # Fallback for health check errors
        location @health_unavailable {
            default_type application/json;
            return 503 '{"status":"error","message":"Health check service unavailable"}';
        }

        # WebSocket endpoint - exact match for /ws
        location = /ws {
            set $upstream_ws sockets;
            proxy_pass http://$upstream_ws:8004;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_read_timeout 86400;

            # WebSocket error handling
            proxy_intercept_errors on;
            error_page 502 503 504 = @websocket_unavailable;
        }

        # WebSocket endpoint - all paths under /ws/
        location /ws/ {
            set $upstream_ws sockets;
            proxy_pass http://$upstream_ws:8004;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_read_timeout 86400;

            # WebSocket error handling
            proxy_intercept_errors on;
            error_page 502 503 504 = @websocket_unavailable;
        }

        # Fallback for WebSocket errors
        location @websocket_unavailable {
            default_type application/json;
            return 503 '{"status":"error","message":"WebSocket service unavailable"}';
        }

        # All other API requests
        location / {
            set $upstream_api server;
            proxy_pass http://$upstream_api:8000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_connect_timeout 60;
            proxy_read_timeout 60;
            proxy_buffers 8 16k;
            proxy_buffer_size 32k;
        }
    }
}