version: '3.8'

services:
  swag:
    image: linuxserver/swag
    ports:
      - "80:80"   # HTTP
      - "443:443" # HTTPS
    volumes:
      - /home/ubuntu/swag/config:/config
    environment:
      - URL=api.swecc.org
      - EMAIL=sweccuw@gmail.com
      - VALIDATION=http
    networks:
      - swecc-network
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      restart_policy:
        condition: any

  bot:
    image: swecc/swecc-bot:latest
    networks:
      - swecc-network
    configs:
      - source: bot_env
        target: /app/.env
    deploy:
      replicas: 1
      restart_policy:
        condition: any

  chronos:
    image: swecc/swecc-chronos:latest
    ports:
      - "8002:8002"
    networks:
      - swecc-network
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - chronos_data:/app
    configs:
      - source: chronos_env
        target: /app/.env
    deploy:
      replicas: 1
      restart_policy:
        condition: any

  redis:
    image: swecc/swecc-redis:latest
    networks:
      - swecc-network
    volumes:
      - redis_data:/data
    deploy:
      replicas: 1
      restart_policy:
        condition: any

  rabbit:
    image: swecc/swecc-rabbit:latest
    networks:
      - swecc-network
    volumes:
      - swecc-rabbit-data:/var/lib/rabbitmq
    deploy:
      replicas: 1
      restart_policy:
        condition: any

  scheduler:
    image: swecc/swecc-scheduler:latest
    networks:
      - swecc-network
    configs:
      - source: scheduler_env
        target: /app/.env
    deploy:
      replicas: 1
      restart_policy:
        condition: any

  server:
    image: swecc/swecc-server:latest
    networks:
      - swecc-network
    configs:
      - source: server_env
        target: /app/.env
    deploy:
      replicas: 1
      restart_policy:
        condition: any

  sockets:
    image: swecc/swecc-sockets:latest
    networks:
      - swecc-network
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    configs:
      - source: sockets_env
        target: /app/.env
    deploy:
      replicas: 1
      restart_policy:
        condition: any

networks:
  swecc-network:
    driver: overlay
    attachable: true

volumes:
  chronos_data:
  redis_data:
  swecc-rabbit-data:

configs:
  bot_env:
    external: true
  chronos_env:
    external: true
  scheduler_env:
    external: true
  server_env:
    external: true
  sockets_env:
    external: true